// ─────────────────────────────────────────────────────────────────────────────
// PAGE STYLES
// Interior pages have their own stylesheet for styles that only exist on
// that page. Any styles shared between pages, including repeated sections,
// should go into root.scss
// ─────────────────────────────────────────────────────────────────────────────

/*-- -------------------------- -->
<---          Contact           -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #cs-contact-265 {
        background-color: rgba(33, 158, 188, 0.05);
        padding: var(--sectionPadding);
        .cs-container {
            align-items: center;
            display: flex;
            flex-direction: column;
            /* 48px - 64px */
            gap: clamp(3rem, 6vw, 4rem);
            margin: auto;
            /* changes to 1280px at tablet */
            max-width: calc(550 / 16 * 1rem);
            width: 100%;
        }

        .cs-content {
            /* centers content horizontally, set to flex-start to left align */
            align-items: flex-start;
            display: flex;
            flex-direction: column;
            justify-content: center;
            margin: 0 0 calc(32 / 16 * 1rem) 0;
            /* set text align to left if content needs to be left aligned */
            text-align: left;
            width: 100%;

            p {
                margin-top: 1rem;
                padding: 0 2rem;
            }
        }

        #cs-form-265 {
            label {
                align-items: flex-start;
                color: var(--headerColor);
                display: flex;
                flex-direction: column;
                font-size: calc(16 / 16 * 1rem);
                font-weight: 700;
                justify-content: center;
                line-height: 1.5em;
                /* 12px - 20px */
                margin-bottom: clamp(0.75rem, 1.3em, 1.25rem);
            }

            .cs-label-message {
                /* 32px - 48px */
                margin-bottom: clamp(2rem, 6.3vw, 3rem);
            }

            input,
            textarea {
                border: 1px solid #b4b2c7;
                border-radius: calc(4 / 16 * 1rem);
                /* prevents border & padding from affecting height */
                box-sizing: border-box;
                font-size: calc(16 / 16 * 1rem);
                height: calc(64 / 16 * 1rem);
                margin-top: calc(4 / 16 * 1rem);
                padding-left: calc(20 / 16 * 1rem);
                transition: border 0.3s;
                width: 100%;

                &:hover {
                    border: 1px solid var(--primary);
                }
            }

            textarea {
                font-family: inherit;
                min-height: calc(120 / 16 * 1rem);
                padding-top: calc(20 / 16 * 1rem);
            }

            .cs-button-solid {
                width: 100%;
            }
        }

        .cs-submit {
            border: none;
            width: 100%;
            &:hover {
                cursor: pointer;
            }
        }

        .cs-right-section {
            align-items: flex-start;
            border-radius: calc(4 / 16 * 1rem);
            /* prevents padding and border from affecting height and width */
            box-sizing: border-box;
            display: flex;
            flex-direction: column;
            height: calc(320 / 16 * 1rem);
            justify-content: flex-end;
            /* cuts off corners on img tag */
            overflow: hidden;
            /* 24px - 40px top & bottom */
            /* 20px - 40px left & right */
            padding: clamp(1.5rem, 3vw, 2.5rem) clamp(1.25rem, 3vw, 2.5rem);
            position: relative;
            width: 100%;
        }

        .cs-header {
            color: var(--bodyTextColorWhite);
            display: block;
            /* 16px - 20px */
            font-size: clamp(1rem, 3vw, 1.25rem);
            font-weight: 700;
            line-height: 1.2em;
            margin-bottom: calc(8 / 16 * 1rem);
        }

        .cs-link {
            color: var(--bodyTextColorWhite);
            display: block;
            /* 16px - 20px */
            font-size: clamp(1rem, 3vw, 1.25rem);
            line-height: 1.2em;
            margin-bottom: calc(20 / 16 * 1rem);
            position: relative;
            text-decoration: none;

            &:before {
                /* current color of the parent */
                background: currentColor;
                bottom: calc(-2 / 16 * 1rem);
                /* Animated underline */
                content: "";
                display: block;
                height: 2px;
                left: 0;
                opacity: 1;
                position: absolute;
                transition: width 0.3s;
                width: 0%;
            }

            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &:last-of-type {
                margin-bottom: 0;
            }
        }

        .cs-block {
            /* sends second address line to the bottom on its own line */
            display: block;
        }

        .cs-bg-picture {
            display: block;
            height: 100%;
            left: 0;
            position: absolute;
            top: 0;
            transition: transform 0.6s;
            width: 100%;
            z-index: -1;

            &:before {
                background: linear-gradient(180deg, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.8) 100%);
                /* background color overlay */
                content: "";
                display: block;
                height: 100%;
                left: 0;
                position: absolute;
                top: 0;
                width: 100%;
                z-index: 1;
            }

            img {
                height: 100%;
                left: 0;
                /* Makes img tag act as a background image */
                object-fit: cover;
                position: absolute;
                top: 0;
                width: 100%;
            }
        }
    }
}

/* Tablet - 700px */
@media only screen and (min-width: 43.75rem) {
    #cs-contact-265 {
        .cs-container {
            max-width: calc(1280 / 16 * 1rem);
        }

        #cs-form-265 {
            align-items: flex-start;
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;

            label {
                width: 48%;
            }

            .cs-label-message {
                width: 100%;
            }
        }
    }
}

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #cs-contact-265 {
        .cs-container {
            align-items: flex-start;
            flex-direction: row;
            gap: calc(80 / 16 * 1rem);
            justify-content: center;
        }

        .cs-left-section {
            max-width: calc(630 / 16 * 1rem);
        }

        #cs-form-265 {
            label {
                width: 100%;
            }
        }

        .cs-right-section {
            /* prevents flexbox from squishing it */
            flex: none;
            /* changes to 578px at 1300px wide */
            height: calc(686 / 16 * 1rem);
            max-width: calc(542 / 16 * 1rem);
            width: 40vw;

            &:hover {
                .cs-bg-picture {
                    transform: scale(1.1);
                }
            }
        }

        .cs-block {
            /* goes back to inline so it stays "in line" with the rest of the text */
            display: inline-block;
        }
    }
}

/* Small Desktop - 1300px */
@media only screen and (min-width: 81.25rem) {
    #cs-contact-265 {
        #cs-form-265 {
            column-gap: calc(0 / 16 * 1rem);
            label {
                max-width: calc(305 / 16 * 1rem);
                width: 48%;
            }

            .cs-label-message {
                max-width: 100%;
            }
        }

        .cs-right-section {
            height: calc(578 / 16 * 1rem);
        }
    }
}

/* Dark Mode */
@media only screen and (min-width: 0rem) {
    body.dark-mode {
        #cs-contact-265 {
            .cs-text,
            .cs-title {
                color: var(--bodyTextColorWhite);
            }

            #cs-form-265 {
                label,
                input,
                textarea {
                    background-color: transparent;
                    color: var(--bodyTextColorWhite);

                    &::placeholder {
                        /* lighten up the color of the text by 40%*/
                        filter: brightness(1.4);
                    }
                }
            }

            .cs-bg-picture {
                background-color: #000;

                img {
                    /* lets parent background-color bleed through and darken it */
                    opacity: 0.5;
                }
            }
        }
    }
}
